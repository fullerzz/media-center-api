# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  application_folder: media-center-api
  S3BUCKET: media-center-api

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.IAM_ROLE }}
        aws-region: us-east-1

    - name: Build and Package with Maven
      run: mvn -B package --file pom.xml

    - name: Upload Artifact to S3
      working-directory: ${{ env.application_folder }}/target
      run: aws s3 cp *.jar s3://${{ env.S3BUCKET }}/

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  deploy:
    needs: build
    runs-on: ubuntu-latest
      permissions:
        id-token: write
        contents: read
      steps:
        - uses: actions/checkout@v3
        - uses: aws-actions/configure-aws-credentials@v1
          with:
            role-to-assume: ${{ secrets.IAM_ROLE }}
            role-session-name: GitHub-Action-Role
            aws-region: ${{ env.AWS_REGION }}
        - run: |
            echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
            commit_hash=`git rev-parse HEAD`
            aws deploy create-deployment --application-name media-center-api --deployment-group-name default --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures

